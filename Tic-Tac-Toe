import random

# Initialize the Tic-Tac-Toe board
def initialize_board():
    return [[' ' for _ in range(3)] for _ in range(3)]

# Display the Tic-Tac-Toe board
def display_board(board):
    print("\n  0 1 2")
    for i, row in enumerate(board):
        print(f"{i} {' '.join(row)}")
    print()

# Check if there is a winner or if the game is a draw
def check_winner(board):
    # Check rows and columns for a win
    for i in range(3):
        if board[i][0] == board[i][1] == board[i][2] != ' ':
            return board[i][0]
        if board[0][i] == board[1][i] == board[2][i] != ' ':
            return board[0][i]

    # Check diagonals for a win
    if board[0][0] == board[1][1] == board[2][2] != ' ':
        return board[0][0]
    if board[0][2] == board[1][1] == board[2][0] != ' ':
        return board[0][2]

    # Check for a draw (if no empty spaces left)
    if all(cell != ' ' for row in board for cell in row):
        return 'D'

    # Game is still ongoing
    return None

# Basic AI for making a move
def ai_move(board):
    empty_cells = [(i, j) for i in range(3) for j in range(3) if board[i][j] == ' ']
    return random.choice(empty_cells)

# Main game loop
def play_game():
    board = initialize_board()
    current_player = 'O'  # Player starts first

    while True:
        display_board(board)

        if current_player == 'O':  # Player's turn
            try:
                row, col = map(int, input("Enter your move (row and column): ").split())
                if board[row][col] == ' ':
                    board[row][col] = 'O'
                    current_player = 'X'
                else:
                    print("Cell is already occupied. Try again.")
                    continue
            except (IndexError, ValueError):
                print("Invalid input. Enter row and column as two numbers between 0 and 2.")
                continue
        else:  # AI's turn
            row, col = ai_move(board)
            board[row][col] = 'X'
            print(f"AI plays at ({row}, {col})")
            current_player = 'O'

        winner = check_winner(board)
        if winner:
            display_board(board)
            if winner == 'D':
                print("It's a draw!")
            else:
                print(f"{winner} wins!")
            break

# Start the game
play_game()
